.table {
    --shadow-color: oklch(0 0 0 / .05);
    --shadow: var(--shadow-color) 0 .5em 2em;

    position: relative;
    display: block grid;
    grid-template-columns: repeat(var(--columns), minmax(max-content, auto));
    align-content: start;
    padding-inline: 1px;
    margin-inline: -1px;
    overflow: auto;
    background-color: inherit;
    isolation: isolate;

    block-size: 100%;

    & input[type="checkbox"] {
        margin: .1em;
    }

    & .cell {
        display: block grid;
        padding: var(--padding-m);
        border: 1px solid transparent;
        border-radius: var(--radii-m);
        background: inherit;
        white-space: nowrap;

        &:first-of-type {
            position: sticky;
            inset-inline-start: 1px;
            padding-inline-start: calc(var(--depth) * 1em + var(--padding-m));
            z-index: 1;

            &::after {
                content: '';
                position: absolute;
                inset-inline-start: 100%;
                inset-block-start: -2px;
                display: block;
                inline-size: 2em;
                block-size: calc(3px + 100%);
                animation: column-scroll-shadow linear both;
                animation-timeline: scroll(inline);
                animation-range: 0 2em;
                pointer-events: none;
            }
        }
    }

    & :is(.header, .main, .footer) {
        grid-column: 1 / -1;
        display: block grid;
        grid-template-columns: subgrid;
        background-color: inherit;
    }

    & .header {
        position: sticky;
        inset-block-start: 0;
        border-block-end: 1px solid var(--surface-300);
        z-index: 2;
        animation: header-scroll-shadow linear both;
        animation-timeline: scroll();
        animation-range: 0 2em;
        font-weight: var(--weight-bold);

        & > aside {
            position: sticky;
            inset-inline-start: 0;
            background: inherit;
            padding: var(--padding-m);
            z-index: 1;
        }

        & > .cell {
            grid-auto-flow: column;
            justify-content: space-between;

            & > svg {
                transition: opacity .15s ease-in-out;
            }

            &:not(.sorted):not(:hover) > svg {
                opacity: 0;
            }
        }
    }

    & .main {
        background-color: inherit;
    }

    & .row {
        --alpha: 0;
        grid-column: 1 / -1;
        display: block grid;
        grid-template-columns: subgrid;
        border: 1px solid transparent;
        background-color: inherit;
        background-image: linear-gradient(0deg, oklch(from var(--info) l c h / var(--alpha)), oklch(from var(--info) l c h / var(--alpha)));

        /* & > :is(.cell, aside) {
            background-image: linear-gradient(0deg, oklch(from var(--info) l c h / var(--alpha)), oklch(from var(--info) l c h / var(--alpha)));
        } */

        &:has(> aside > :checked) {
            --alpha: .1;
            border-color: var(--info);

            & span {
                font-variation-settings: 'GRAD' 1000;
            }

            /* Remove the top border when directly preceded by a selected row */
            & + :has(> aside > :checked) {
                border-block-start-color: transparent;
            }

            /* Remove the top border when directly succeeded by a selected row */
            &:has(+ .row > aside > :checked) {
                border-block-end-color: transparent;
            }
        }

        &:hover {
            --alpha: .2 !important;
        }

        & > aside {
            position: sticky;
            inset-inline-start: 1px;
            background: inherit;
            padding: var(--padding-m);
            z-index: 1;
        }
    }

    & details {
        display: contents;
        background-color: inherit;

        &::details-content {
            grid-column: 1 / -1;
            display: block grid;
            grid-template-columns: subgrid;
            background-color: inherit;
        }

        &:not([open])::details-content {
            display: none;
        }

        & > summary {
            position: sticky;
            inset-inline-start: 1px;
            grid-column: 1;
            padding: var(--padding-m);
            padding-inline-start: calc(var(--depth) * 1em + var(--padding-m));

            &::after {
                content: '';
                position: absolute;
                inset-inline-start: calc(100% - 1px);
                inset-block-start: -.5px;
                display: block;
                inline-size: 2em;
                block-size: 100%;
                animation: column-scroll-shadow linear both;
                animation-timeline: scroll(inline);
                animation-range: 0 2em;
                pointer-events: none;
            }
        }
    }

    &.selectable {
        grid-template-columns: 2em repeat(var(--columns), minmax(max-content, auto));

        & .cell:first-of-type {
            inset-inline-start: 2em;
            /* inset-inline-start: calc(2em + var(--padding-m) * var(--depth)); */
        }

        & details > summary {
            inset-inline-start: 2em;
            grid-column: 2;
        }
    }
}

@property --depth {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
}

@keyframes header-scroll-shadow {
    from {
        box-shadow: none;
    }

    to {
        box-shadow: var(--shadow);
    }
}

@keyframes column-scroll-shadow {
    from {
        background: linear-gradient(90deg, transparent, transparent);
    }

    to {
        background: linear-gradient(90deg, var(--shadow-color), transparent);
    }
}